# nginxの実行ユーザを指定
user  nginx;
# Nginxのプロセス数を指定(autoの場合はNginxが最適化)
worker_processes  auto;
# エラーログの出力先
error_log /var/log/nginx/error.log warn;
# pidが記載されたファイルの記載先
pid /var/run/nginx.pid;
# workerプロセスが最大に開けるファイル数の制限
worker_rlimit_nofile 100000;

events {
    # 1プロセスが開けるコネクション数
    worker_connections  1024;
    # 可能な限りクライアントからのアクセスを許可
    multi_accept on;
}


http {
    # MIMEタイプと拡張子の関連付けを定義したファイルを読み込み
    include /etc/nginx/mime.types;
    # MIMEタイプ
    default_type  application/octet-stream;
    # ログのフォーマット
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$host" "$http_x_forwarded_for"';

    # アクセスログの出力
    access_log  /var/log/nginx/access.log  main;
    # エラー時にnginxのバージョンを非表示
    server_tokens off;
    # ファイルのコピーにsendfile(2)を用いる。readvやwritevが発行されない
    sendfile on;
    # レスポンスヘッダとファイルの内容をまとめて送る
    tcp_nopush on;
    # データのキャッシュをしない
    tcp_nodelay on;
    # 一度オープンしたファイルのディスクリプタのinodeをキャッシュ
    open_file_cache max=100 inactive=20s;
    # サーバ側でのキープアライブのタイムアウトの秒数を設定
    keepalive_timeout  65;
    # レスポンスヘッダーにcharsetを追加
    charset UTF-8;
    # レスポンスのコンテンツを圧縮するかを設定
    gzip  on;
    # 圧縮httpのバージョン
    gzip_http_version 1.0;
    # 圧縮の最小サイズ
    gzip_min_length 128;
    # 圧縮レベル [1-9]
    gzip_comp_level 9;
    # 圧縮ファイルタイプ
    gzip_types text/html
	       text/plain
               text/xml
               text/css
               text/javascript
               application/xml
               application/xhtml+xml
               application/rss+xml
               application/atom_xml
               application/javascript
	       application/json
               application/x-javascript
               application/x-httpd-php;
    # 圧縮されたことをヘッダーへ追記
    gzip_vary on;
    # プロキシ経由の場合も圧縮して返す
    gzip_proxied any;

    # バーチャルサーバの読み込み
    include /etc/nginx/conf.d/*.conf;
}
