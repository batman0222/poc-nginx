# map変数のハッシュテーブルのbucketサイズを設定
map_hash_bucket_size 128;
# map変数のハッシュテーブルの最大size
map_hash_max_size 2048;

# Syntax:	map string $variable { ... }
# Context:	http
map $http_user_agent $device {
    default pc;
    =curl/7.66.0 Perfect_Match;
    ~curl $http_user_agent;
}

upstream backend {
    # 接続先選定のアルゴリズム
    least_conn;
    # ip_hash;

    # 300s以内に3回リクエストが失敗したら300s以下のサーバへリクエストしない
    server webapp001:5000 weight=5 max_fails=3 fail_timeout=60s;
    server webapp002:5000 weight=5 max_fails=3 fail_timeout=60s;

    # 他サーバが死んだらbackupへリクエスト
    server webapp003:5000 backup;
}

server {
    listen 80;
    server_name example.com;
    return 301 https://$host$request_uri;
}

server {
    listen       443 ssl;

    # SSL証明書ファイルのパス
    ssl_certificate /etc/ssl/certs/server.crt;
    # 秘密鍵ファイルのパス
    ssl_certificate_key /etc/ssl/certs/server.key;
    # SSLセッションキャッシュのタイムアウト
    ssl_session_timeout  5m;
    # SSL/TLSプロトコルの指定
    ssl_protocols TLSv1.2 TLSv1.3;
    # サーバ側指定の暗号化プロトコルの優先設定
    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers   on;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # faviconのログは取らない
    location = /favicon.ico {
	log_not_found off;
        access_log off;
    }

    # Nginxサーバのステータスチェック
    location /__status {
	stub_status on;
	# ローカル、同一ネットワーク内からのみアクセス可能
	allow 127.0.0.1;
	allow 192.168.2.0/24;
	deny all;
    }

    # 完全なURIを与えているので/app/は削除され/へアクセス(/uri,/uri/も同様)
    location /uri/ {
	root /usr/share/nginx/html;

        proxy_pass http://backend/;

	proxy_next_upstream error timeout;
	proxy_next_upstream_timeout 3;

        proxy_set_header Host $http_host;
	proxy_set_header Uri $uri;
	proxy_set_header Method $request_method;
	proxy_set_header Scheme $scheme;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Server $host; # プロキシサーバのホスト名
	proxy_set_header X-Ua-Mapping $device;

        # エラー時でもproxy先ではなくngixnのエラーを返す
	proxy_intercept_errors on;
    }

    location /no_uri {
        proxy_pass http://backend;
    }

    error_page  404              /404.html;

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
