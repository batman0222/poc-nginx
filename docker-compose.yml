version: "3.7"

services:
  poc:
    hostname: poc
    container_name: poc
    build:
      context: ./poc
      dockerfile: Dockerfile
    tty: true
    networks:
      default:
        ipv4_address: 192.168.2.50
    volumes:
      - type: bind
        source: ./poc/request_test.sh
        target: /request_test.sh

  offload:
    hostname: poc-proxy.example.com
    container_name: poc-proxy.example.com
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./nginx/config/nginx.conf
        target: /etc/nginx/nginx.conf
      - type: bind
        source: ./nginx/config/ssl_offload.nginxconf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./nginx/html
        target: /usr/share/nginx/html
    tty: true
    ports:
      - 8080:80/tcp
      - 8081:443/tcp
    networks:
      default:
        ipv4_address: 192.168.2.200

  redis:
    hostname: redis001
    container_name: redis001
    image: redis:latest
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes

  webapp001:
    hostname: webapp001
    container_name: webapp001
    domainname: poc.example.com
    user: root
    build:
      context: ./webapp
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./webapp/main.py
        target: /var/www/main.py
      - type: bind
        source: ./webapp/templates
        target: /var/www/templates
    dns:
      - 8.8.8.8
      - 9.9.9.9
    tty: true
    environment:
      TZ: "Asia/Tokyo"
    networks:
      default:
        ipv4_address: 192.168.2.100
  webapp002:
    hostname: webapp002
    container_name: webapp002
    domainname: poc.example.com
    user: root
    build:
      context: ./webapp
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./webapp/main.py
        target: /var/www/main.py
      - type: bind
        source: ./webapp/templates
        target: /var/www/templates
    dns:
      - 8.8.8.8
      - 9.9.9.9
    tty: true
    environment:
      TZ: "Asia/Tokyo"
    networks:
      default:
        ipv4_address: 192.168.2.101
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "128M"
        reservations:
          cpus: "0.05"
          memory: "64MB"
  webapp003:
    hostname: webapp003
    container_name: webapp003
    domainname: poc.example.com
    user: root
    build:
      context: ./webapp
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./webapp/main.py
        target: /var/www/main.py
      - type: bind
        source: ./webapp/templates
        target: /var/www/templates
    dns:
      - 8.8.8.8
      - 9.9.9.9
    tty: true
    environment:
      TZ: "Asia/Tokyo"
    networks:
      default:
        ipv4_address: 192.168.2.102
  webapp004:
    hostname: webapp004
    container_name: webapp004
    domainname: poc.example.com
    user: root
    build:
      context: ./webapp
      dockerfile: Dockerfile-socket
    volumes:
      - type: bind
        source: ./webapp/main.py
        target: /var/www/main.py
      - type: bind
        source: ./webapp/templates
        target: /var/www/templates
    # devices:
    #   - "/dev/ttyUSB0:/dev/ttyUSB0"

networks:
  default:
    ipam:
      config:
        - subnet: 192.168.2.0/24
