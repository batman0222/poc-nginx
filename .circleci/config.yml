version: 2.1

commands:
  install_docker_compose:
    description: "Install docker-compose"
    steps:
      - run:
          name: "Install docker-compose"
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.25.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
            docker-compose version

executors:
  def-ubuntu:
    machine:
      enabled: true
      image: ubuntu-1604:201903-01
    shell: "/bin/bash"
    working_directory: /tmp/app

jobs:
  docker_env_info:
    executor:
      name: def-ubuntu
    steps:
      - checkout
      - run:
          name: "docker_env_info"
          command: |
            bash script/print_info.sh

  check_new_image_tag:
    executor:
      name: def-ubuntu
    steps:
      - checkout
      - run:
          name: "docker image check version"
          command: |
            find . -name Dockerfile* | xargs cat \
             | grep FROM \
             | awk '{print $2}' \
             | cut -d : -f 1 \
             | sort \
             | uniq
             # | xargs -L1 -Iimg docker run --rm goodwithtech/dockertags --limit 3 img

  shellcheck:
    executor:
      name: def-ubuntu
    steps:
      - checkout
      - run: |
          pwd && make shellcheck

  dockerfile_lint:
    executor:
      name: def-ubuntu
    steps:
      - checkout
      - run:
          name: "Dockerfile lint"
          command: |
            sudo apt apdate && apt upgrade
            sudo apt install -y jq curl wget
            docker run --rm -i hadolint/hadolint hadolint --version
      - run:
          name: "Dockerfile nginx"
          command: |
            docker run --rm -i hadolint/hadolint hadolint - --format json < nginx/Dockerfile | jq . || echo 0
      - run:
          name: "Dockerfile webapp"
          command: |
            docker run --rm -i hadolint/hadolint hadolint - --format json < webapp/Dockerfile | jq . || echo 0

  docker_image_build:
    executor:
      name: def-ubuntu
    steps:
      - checkout
      - install_docker_compose
      - run:
          name: "docker image build"
          command: |
            export DOCKER_BUILDKIT=1
            export COMPOSE_DOCKER_CLI_BUILD=1
            ls -la
            time docker-compose up -d
      - run:
          name: "docker image list"
          command: |
            docker-compose ps
            docker image ls

  security_scan_trivy:
    executor:
      name: def-ubuntu
    steps:
      - run:
          name: "Install trivy"
          command: |
            wget https://github.com/aquasecurity/trivy/releases/download/v0.2.1/trivy_0.2.1_Linux-64bit.tar.gz
            tar zxvf trivy_0.2.1_Linux-64bit.tar.gz
            sudo mv trivy /usr/local/bin
      - run:
          name: "Check version"
          command: |
            trivy --version
      - restore_cache:
          key: vulnerability-db
      - save_cache:
          key: vulnerability-db
          paths:
            - $HOME/.cache/trivy

  security_scan_dockle:
    executor:
      name: def-ubuntu
    steps:
      - run:
          name: "Install dockle"
          command: |
            wget https://github.com/goodwithtech/dockle/releases/download/v0.2.3/dockle_0.2.3_Linux-64bit.tar.gz
            tar zxvf dockle_0.2.3_Linux-64bit.tar.gz
            sudo mv dockle /usr/local/bin
      - run:
          name: "Check version"
          command: |
            dockle --version

workflows:
  poc_workflow:
    jobs:
      - docker_env_info
      - check_new_image_tag
      - shellcheck
      - dockerfile_lint:
          requires:
            - docker_env_info
      - docker_image_build:
          requires:
            - docker_env_info
            - dockerfile_lint
      - security_scan_trivy:
          requires:
            - docker_image_build
      - security_scan_dockle:
          requires:
            - docker_image_build
